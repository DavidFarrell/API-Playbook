(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{131:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),u=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||a;return n?i.a.createElement(m,c(c({ref:t},s),{},{components:n})):i.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),i=n(7),a=(n(0),n(131)),o={id:"production_testing",title:"Production Testing Checklist"},c={unversionedId:"production_testing",id:"production_testing",isDocsHomePage:!1,title:"Production Testing Checklist",description:"Production Testing Checklist",source:"@site/docs/production_testing.md",slug:"/production_testing",permalink:"/API-Playbook/production_testing",editUrl:"https://github.com/LBHackney-IT/API-Playbook/edit/master/docs/production_testing.md",version:"current",sidebar:"docs",previous:{title:"Debugging APIs in Production",permalink:"/API-Playbook/debugging_apis"},next:{title:"Access to RDS in a private subnet from local machine",permalink:"/API-Playbook/rds_access"}},l=[{value:"Production Testing Checklist",id:"production-testing-checklist",children:[]},{value:"Naming conventions",id:"naming-conventions",children:[]},{value:"Responses",id:"responses",children:[]},{value:"Configuration and security",id:"configuration-and-security",children:[]},{value:"Errors",id:"errors",children:[]}],s={toc:l};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"production-testing-checklist"},"Production Testing Checklist"),Object(a.b)("p",null,"The following tasks should be completed before every API deployment into production unless there is a valid reason to not complete a given task. This reason should be documented."),Object(a.b)("h2",{id:"naming-conventions"},"Naming conventions"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Endpoint URL follows the format of ",Object(a.b)("inlineCode",{parentName:"li"},"api/v#/controllerName")),Object(a.b)("li",{parentName:"ul"},"Other naming conventions are upheld in query params and responses as per the playbook naming guidance.")),Object(a.b)("h2",{id:"responses"},"Responses"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"All workflows in the pipeline are passing (observe in CircleCI)"),Object(a.b)("li",{parentName:"ul"},"Response time of the API is not longer than the Lambda timeout"),Object(a.b)("li",{parentName:"ul"},"Check for long-running queries that might time out"),Object(a.b)("li",{parentName:"ul"},"List endpoint works with each search parameter"),Object(a.b)("li",{parentName:"ul"},"Limit and pagination is working"),Object(a.b)("li",{parentName:"ul"},"Data returned makes sense i.e. not loads of duplicates"),Object(a.b)("li",{parentName:"ul"},"Responses match the Swagger doc, if they don't for good reason, update Swagger"),Object(a.b)("li",{parentName:"ul"},"Values within responses are returned in the proper format",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre"}," - e.g. enums return the desired constant\u2019s name/description and not its integer value in the enumeration; date/time is in a readable format\n")))),Object(a.b)("h2",{id:"configuration-and-security"},"Configuration and security"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"All entities are created in AWS in each environment (incl. correct subnets and any other required config)"),Object(a.b)("li",{parentName:"ul"},"Check all env vars"),Object(a.b)("li",{parentName:"ul"},"For example, make sure staging environment variables haven't been copied over to production without changing their values to the correct production values."),Object(a.b)("li",{parentName:"ul"},"API keys are in place"),Object(a.b)("li",{parentName:"ul"},"API authentication is in place \u2013 no anonymous access")),Object(a.b)("h2",{id:"errors"},"Errors"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"are logged in CloudWatch"),Object(a.b)("li",{parentName:"ul"},"Notifications are available when API is failing"),Object(a.b)("li",{parentName:"ul"},"Correct error responses are returned"),Object(a.b)("li",{parentName:"ul"},"vThe canaries for all endpoints that should have them"),Object(a.b)("li",{parentName:"ul"},"Check that canaries are passing"),Object(a.b)("li",{parentName:"ul"},"The canaries have someone subscribed to it"),Object(a.b)("li",{parentName:"ul"},"Tenants and Leaseholders canaries should send alerts to the Tenants-Leaseholders-alert SNS topic ")))}u.isMDXComponent=!0}}]);