(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{117:function(e,r,t){"use strict";t.d(r,"a",(function(){return d})),t.d(r,"b",(function(){return f}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var r=o.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=u(e.components);return o.a.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},b=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),b=n,f=d["".concat(s,".").concat(b)]||d[b]||p[b]||a;return t?o.a.createElement(f,i(i({ref:r},l),{},{components:t})):o.a.createElement(f,i({ref:r},l))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=b;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},65:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return s})),t.d(r,"metadata",(function(){return i})),t.d(r,"toc",(function(){return c})),t.d(r,"default",(function(){return u}));var n=t(3),o=t(7),a=(t(0),t(117)),s={id:"error_codes",title:"Error Codes"},i={unversionedId:"error_codes",id:"error_codes",isDocsHomePage:!1,title:"Error Codes",description:"Standardised Error Messages",source:"@site/docs/error_codes.md",slug:"/error_codes",permalink:"/API-Playbook/error_codes",editUrl:"https://github.com/LBHackney-IT/API-Playbook/edit/master/docs/error_codes.md",version:"current",sidebar:"docs",previous:{title:"API Implementation Guidelines",permalink:"/API-Playbook/api_implementation_guidelines"},next:{title:"Naming Conventions",permalink:"/API-Playbook/naming_conventions"}},c=[{value:"Standardised Error Messages",id:"standardised-error-messages",children:[]},{value:"HTTP Status Codes",id:"http-status-codes",children:[]},{value:"Handling Errors",id:"handling-errors",children:[]}],l={toc:c};function u(e){var r=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"standardised-error-messages"},"Standardised Error Messages"),Object(a.b)("h2",{id:"http-status-codes"},"HTTP Status Codes"),Object(a.b)("p",null,"When a client makes a request to an HTTP server \u2014 and the server successfully receives the request \u2014 the server must notify the client if the request was successfully handled or not. HTTP accomplishes this with five categories of status codes:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"100-level (Informational) \u2014 Server acknowledges a request"),Object(a.b)("li",{parentName:"ul"},"200-level (Success) \u2014 Server completed the request as expected"),Object(a.b)("li",{parentName:"ul"},"204-level (No Content) - indicates that a request has succeeded"),Object(a.b)("li",{parentName:"ul"},"300-level (Redirection) \u2014 Client needs to perform further actions to complete the request"),Object(a.b)("li",{parentName:"ul"},"400-level (Client error) \u2014 Client sent an invalid request"),Object(a.b)("li",{parentName:"ul"},"401-level (unauthorized) - The request sent by the client could not be authenticated"),Object(a.b)("li",{parentName:"ul"},"500-level (Server error) \u2014 Server failed to fulfill a valid request due to an error with server"),Object(a.b)("li",{parentName:"ul"},"503-level (Service unavailable) - The server is currently unable to handle the request due to a temporary overloading or maintenance of the server.")),Object(a.b)("h2",{id:"handling-errors"},"Handling Errors"),Object(a.b)("p",null,"At Hackney, we use the following Standardised Error messages for our APIs:"),Object(a.b)("p",null,"Basic Errors"),Object(a.b)("p",null,"404- Not Found - If an item(requested resource) was not found\n{\n\u201cdevErrorMessages\u201d: ","[\u201cdebug info or stack trace\u201d]",",\n\u201cuserErrorMessage\u201d: \u201cThe item you search for was not found\u201d\n}"),Object(a.b)("p",null,"400 - Bad request : When the client sent an invalid request for eg : missing required header body or parameter\n{\n\u201cDevErrorMessages\u201d: ","[\u201cvalidation errors\u201d]",",\n\u201cUserErrorMessage\u201d: \u201cYour item could not be created for the following",Object(a.b)("br",{parentName:"p"}),"\n","reasons...\u201d\n}"),Object(a.b)("p",null,"500 - Internal Server Error - Generic error occurred\n{\n\u201cDevErrorMessage\u201d: \u201cdebug info or stack trace\u201d,\n\u201cUserErrorMessage\u201d: \u201cThe item you search for was not found\u201d\n}"))}u.isMDXComponent=!0}}]);