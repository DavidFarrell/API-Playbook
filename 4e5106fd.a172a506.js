(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{129:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),b=n,d=u["".concat(o,".").concat(b)]||u[b]||m[b]||i;return a?r.a.createElement(d,s(s({ref:t},c),{},{components:a})):r.a.createElement(d,s({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},86:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(129)),o={id:"naming_conventions",title:"Naming Conventions"},s={unversionedId:"naming_conventions",id:"naming_conventions",isDocsHomePage:!1,title:"Naming Conventions",description:"MUST Use lowercase separate words with hyphens for Path Segments",source:"@site/docs/naming_conventions.md",slug:"/naming_conventions",permalink:"/API-Playbook/naming_conventions",editUrl:"https://github.com/LBHackney-IT/API-Playbook/edit/master/docs/naming_conventions.md",version:"current",sidebar:"docs",previous:{title:"Deprecation",permalink:"/API-Playbook/deprecation"},next:{title:"HTTP",permalink:"/API-Playbook/http"}},l=[{value:"MUST Use lowercase separate words with hyphens for Path Segments",id:"must-use-lowercase-separate-words-with-hyphens-for-path-segments",children:[]},{value:"MUST Use snake_case for Query Parameters",id:"must-use-snake_case-for-query-parameters",children:[]},{value:"MUST Pluralize Resource Names",id:"must-pluralize-resource-names",children:[]},{value:"MUST use Outsider Understandable Property and Variable Names",id:"must-use-outsider-understandable-property-and-variable-names",children:[]},{value:"MUST use camelCase Property Names",id:"must-use-camelcase-property-names",children:[]},{value:"MUST Pluralise Array Names",id:"must-pluralise-array-names",children:[]},{value:"MUST Avoid Trailing Slashes",id:"must-avoid-trailing-slashes",children:[]},{value:"MUST Stick to Conventional Query Parameters",id:"must-stick-to-conventional-query-parameters",children:[]}],c={toc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"must-use-lowercase-separate-words-with-hyphens-for-path-segments"},"MUST Use lowercase separate words with hyphens for Path Segments"),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},"/shipment-orders/{shipment-order-id}\n")),Object(i.b)("p",null,"This applies to concrete path segments and not the names of path parameters. For example ",Object(i.b)("inlineCode",{parentName:"p"},"{shipment_order_id}")," would be ok as a path parameter."),Object(i.b)("h2",{id:"must-use-snake_case-for-query-parameters"},"MUST Use snake_case for Query Parameters"),Object(i.b)("p",null,"Examples:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"customer_number, order_id, billing_address\n")),Object(i.b)("h2",{id:"must-pluralize-resource-names"},"MUST Pluralize Resource Names"),Object(i.b)("p",null,"Usually, a collection of resource instances is provided (at least API should be ready here). The special case of a resource singleton is a collection with cardinality 1."),Object(i.b)("h2",{id:"must-use-outsider-understandable-property-and-variable-names"},"MUST use Outsider Understandable Property and Variable Names"),Object(i.b)("p",null,"Property and variable names should not contain acronyms or word shortenings that require any project or database specific knowledge to decipher. "),Object(i.b)("p",null,"Examples:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"use `modificationProcess` rather than `modProc`\nuse `propertyRef` rather than `propRef`\nuse `dateOfBirth` rather than `DOB`\n")),Object(i.b)("p",null,"The shortenings like ",Object(i.b)("inlineCode",{parentName:"p"},"id")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ref")," are considered acceptable as they are universally understood."),Object(i.b)("h2",{id:"must-use-camelcase-property-names"},"MUST use camelCase Property Names"),Object(i.b)("p",null,"Data formats - ",Object(i.b)("a",{parentName:"p",href:"/API-Playbook/data-formats#must-use-camelcase-property-names-a-za-z0-9"},"camel casing"),"."),Object(i.b)("h2",{id:"must-pluralise-array-names"},"MUST Pluralise Array Names"),Object(i.b)("p",null,"Data formats - ",Object(i.b)("a",{parentName:"p",href:"/API-Playbook/data-formats#must-pluralise-array-names"},"array names"),"."),Object(i.b)("h2",{id:"must-avoid-trailing-slashes"},"MUST Avoid Trailing Slashes"),Object(i.b)("p",null,"The trailing slash must not have specific semantics. Resource paths must deliver the same results whether they have the trailing slash or not."),Object(i.b)("h2",{id:"must-stick-to-conventional-query-parameters"},"MUST Stick to Conventional Query Parameters"),Object(i.b)("p",null,"If you provide query support for searching, sorting, filtering, and paginating, you must stick to the following naming conventions:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"q")," \u2014 default query parameter (e.g. used by browser tab completion); should have an entity specific alias, like sku")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"sort")," \u2014 comma-separated list of fields to define the sort order. To indicate sorting direction, fields may be prefixed with ",Object(i.b)("inlineCode",{parentName:"p"},"+")," (ascending) or ",Object(i.b)("inlineCode",{parentName:"p"},"-")," (descending), e.g. /sales-orders?sort=+id")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"fields")," \u2014 to retrieve only a subset of fields of a resource.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"embed")," \u2014 to expand or embed sub-entities (ie.: inside of an article entity, expand silhouette code into the silhouette object). Implementing ",Object(i.b)("inlineCode",{parentName:"p"},"embed")," correctly is difficult, so do it with care.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"offset")," \u2014 numeric offset of the first element on a page. See ",Object(i.b)("a",{parentName:"p",href:"/API-Playbook/pagination"},"pagination")," section.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"limit")," \u2014 client suggested limit to restrict the number of entries on a page. See ",Object(i.b)("a",{parentName:"p",href:"/API-Playbook/pagination"},"pagination")," section."))))}p.isMDXComponent=!0}}]);